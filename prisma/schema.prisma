// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid()) @db.Uuid
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  email      String   @unique
  name       String?
  password   String
  role       Role @default(USER)
  active     Boolean

  @@map("users")
}

model Order {
  id            String       @id @default(cuid())
  created_at    DateTime     @default(now())
  excursion_id  String
  selected_date DateTime
  time          String
  total_price   Int
  prices        PriceDetail?

  order_status        OrderStatus  @default(PENDING)
  email_status        NotificationStatus  @default(NOT_SENT)
  telegram_status     NotificationStatus  @default(NOT_SENT)

  @@map("orders")
}

model PriceDetail {
  id          String  @id @default(cuid())
  prices      Price[] @relation("prices")
  base_prices Price[] @relation("base_prices")
  order_id    String  @unique
  order       Order   @relation(fields: [order_id], references: [id])

  @@map("price_details")
}

model Price {
  id                   String      @id @default(cuid())
  price                Int
  title                String
  description          String
  price_detail_id      String
  base_price_detail_id String
  price_detail         PriceDetail @relation(fields: [price_detail_id], references: [id], name: "prices")
  price_detailBase     PriceDetail @relation(fields: [base_price_detail_id], references: [id], name: "base_prices")

  @@map("prices")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum NotificationStatus {
  NOT_SENT
  SENT
  FAILED
}
